apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: adminweb
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/nginx-configmap.yaml") . | sha256sum }}-{{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}-{{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.ReplicaCount }}
  template:
    metadata:
      labels:
        name: adminweb
        group: octav
    spec:
      volumes:
        # This emptyDir volume is used to populate data from the app container
        # so that the proxy can serve it without asking the app for it
        - name: static-files
          emptyDir:
            medium: Memory
        - name: adminweb
          secret:
            secretName: {{ .Values.SecretName }}
        - name: adminweb-config
          configMap:
            name: adminweb-config
            items:
              - key: config-json
                path: config.json
        - name: nginx # nginx configuration for the proxy
          configMap:
            name: {{ .Values.Proxy.ConfigName }}
            items:
              - key: nginx.conf
                path: nginx.conf
      containers:
        - image: {{ .Values.global.ImageRegistry }}/{{ .Values.global.ProjectID }}/{{ .Values.Proxy.ImageName }}:{{ .Values.Proxy.ContainerTag }}
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          name: proxy
          ports:
            - name: ngx-proxy-http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: static-files
              readOnly: true
              mountPath: /static-files
            - name: nginx
              readOnly: true
              mountPath: /etc/nginx
            - name: adminweb
              readOnly: true
              mountPath: /etc/adminweb
        - image: {{ .Values.global.ImageRegistry }}/{{ .Values.global.ProjectID }}/{{ .Values.App.ImageName }}:{{ .Values.App.ContainerTag }}
          name: app
          ports:
            - containerPort: {{ .Values.App.Port }}
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          lifecycle:
            postStart:
              exec:
                # This command copies the static files to a shared dir so proxy can read it
                command: [ "cp", "-R", "/admin.builderscon.io/static/", "/static-files/" ]
          env:
            - name: ADMINWEB_REDIS_HOST
              value: redis
            - name: ADMINWEB_REDIS_PORT
              value: "6379"
            - name: SESSION_BACKEND
              value: Redis
            - name: CONFIG_FILE
              value: /config/config.json
            - name: OCTAV_CLIENT_KEY
              valueFrom:
                secretKeyRef:
                  name: adminweb
                  key: clientkey
            - name: OCTAV_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: adminweb
                  key: clientsecret
            - name: ADMINWEB_GITHUB_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: github-adminweb
                  key: id
            - name: ADMINWEB_GITHUB_SECRET
              valueFrom:
                secretKeyRef:
                  name: github-adminweb
                  key: secret
            - name: OCTAV_GOOGLE_MAPS_API_KEY
              value: /etc/adminweb/googlemap.apikey
            - name: ADMINWEB_FLASK_SECRET
              valueFrom:
                secretKeyRef:
                  name: flask
                  key: secret
            - name: ADMINWEB_FACEBOOK_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: facebook
                  key: id
            - name: ADMINWEB_FACEBOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: facebook
                  key: secret
            - name: ADMINWEB_TWITTER_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: twitter-adminweb
                  key: consumer.key
            - name: ADMINWEB_TWITTER_SECRET
              valueFrom:
                secretKeyRef:
                  name: twitter-adminweb
                  key: consumer.secret
            - name: OCTAV_ENDPOINT
              value: http://apiserver:8080
            - name: MOJO_MODE
              value: production
          volumeMounts:
            - name: static-files
              mountPath: /static-files
            - name: adminweb-config
              readOnly: true
              mountPath: /config
            - name: adminweb
              readOnly: true
              mountPath: /etc/adminweb
